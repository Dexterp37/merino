(function() {var implementors = {};
implementors["actix_web"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"actix_web/web/struct.Data.html\" title=\"struct actix_web::web::Data\">Data</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,&nbsp;</span>","synthetic":false,"types":["actix_web::data::Data"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"actix_web/web/struct.Form.html\" title=\"struct actix_web::web::Form\">Form</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,&nbsp;</span>","synthetic":false,"types":["actix_web::types::form::Form"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"actix_web/web/struct.Json.html\" title=\"struct actix_web::web::Json\">Json</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,&nbsp;</span>","synthetic":false,"types":["actix_web::types::json::Json"]}];
implementors["httpmock"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"httpmock/enum.Method.html\" title=\"enum httpmock::Method\">Method</a>","synthetic":false,"types":["httpmock::api::adapter::Method"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"httpmock/struct.HttpMockRequest.html\" title=\"struct httpmock::HttpMockRequest\">HttpMockRequest</a>","synthetic":false,"types":["httpmock::data::HttpMockRequest"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"httpmock/struct.NameValuePair.html\" title=\"struct httpmock::NameValuePair\">NameValuePair</a>","synthetic":false,"types":["httpmock::NameValuePair"]}];
implementors["merino_adm"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"merino_adm/server_side/struct.SuggestionEndpointParameters.html\" title=\"struct merino_adm::server_side::SuggestionEndpointParameters\">SuggestionEndpointParameters</a>","synthetic":false,"types":["merino_adm::server_side::SuggestionEndpointParameters"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"merino_adm/server_side/enum.FormFactor.html\" title=\"enum merino_adm::server_side::FormFactor\">FormFactor</a>","synthetic":false,"types":["merino_adm::server_side::FormFactor"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"merino_adm/server_side/enum.OsFamily.html\" title=\"enum merino_adm::server_side::OsFamily\">OsFamily</a>","synthetic":false,"types":["merino_adm::server_side::OsFamily"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"merino_adm/server_side/struct.SuggestionEndpointResponse.html\" title=\"struct merino_adm::server_side::SuggestionEndpointResponse\">SuggestionEndpointResponse</a>","synthetic":false,"types":["merino_adm::server_side::SuggestionEndpointResponse"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"merino_adm/server_side/struct.PaidSuggestionsResponse.html\" title=\"struct merino_adm::server_side::PaidSuggestionsResponse\">PaidSuggestionsResponse</a>","synthetic":false,"types":["merino_adm::server_side::PaidSuggestionsResponse"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"merino_adm/server_side/struct.PaidSuggestionsTextAdsResponse.html\" title=\"struct merino_adm::server_side::PaidSuggestionsTextAdsResponse\">PaidSuggestionsTextAdsResponse</a>","synthetic":false,"types":["merino_adm::server_side::PaidSuggestionsTextAdsResponse"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"merino_adm/server_side/struct.Suggestion.html\" title=\"struct merino_adm::server_side::Suggestion\">Suggestion</a>","synthetic":false,"types":["merino_adm::server_side::Suggestion"]}];
implementors["merino_settings"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"merino_settings/struct.Settings.html\" title=\"struct merino_settings::Settings\">Settings</a>","synthetic":false,"types":["merino_settings::Settings"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"merino_settings/struct.HttpSettings.html\" title=\"struct merino_settings::HttpSettings\">HttpSettings</a>","synthetic":false,"types":["merino_settings::HttpSettings"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"merino_settings/struct.AdmSettings.html\" title=\"struct merino_settings::AdmSettings\">AdmSettings</a>","synthetic":false,"types":["merino_settings::AdmSettings"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"merino_settings/struct.AdmRemoteSettingsConfig.html\" title=\"struct merino_settings::AdmRemoteSettingsConfig\">AdmRemoteSettingsConfig</a>","synthetic":false,"types":["merino_settings::AdmRemoteSettingsConfig"]}];
implementors["merino_suggest"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"merino_suggest/struct.Suggestion.html\" title=\"struct merino_suggest::Suggestion\">Suggestion</a>","synthetic":false,"types":["merino_suggest::Suggestion"]}];
implementors["merino_web"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"merino_web/dockerflow/enum.CheckStatus.html\" title=\"enum merino_web::dockerflow::CheckStatus\">CheckStatus</a>","synthetic":false,"types":["merino_web::dockerflow::CheckStatus"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"merino_web/dockerflow/struct.HeartbeatResponse.html\" title=\"struct merino_web::dockerflow::HeartbeatResponse\">HeartbeatResponse</a>","synthetic":false,"types":["merino_web::dockerflow::HeartbeatResponse"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"merino_web/suggest/struct.SuggestResponse.html\" title=\"struct merino_web::suggest::SuggestResponse\">SuggestResponse</a>","synthetic":false,"types":["merino_web::suggest::SuggestResponse"]}];
implementors["remote_settings_client"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"remote_settings_client/client/struct.Record.html\" title=\"struct remote_settings_client::client::Record\">Record</a>","synthetic":false,"types":["remote_settings_client::client::Record"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"remote_settings_client/client/struct.Collection.html\" title=\"struct remote_settings_client::client::Collection\">Collection</a>","synthetic":false,"types":["remote_settings_client::client::Collection"]}];
implementors["serde_hjson"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.serde.rs/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"serde_hjson/value/enum.Value.html\" title=\"enum serde_hjson::value::Value\">Value</a>","synthetic":false,"types":["serde_hjson::value::Value"]}];
implementors["serde_json"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_json/struct.Map.html\" title=\"struct serde_json::Map\">Map</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"enum\" href=\"serde_json/enum.Value.html\" title=\"enum serde_json::Value\">Value</a>&gt;","synthetic":false,"types":["serde_json::map::Map"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"serde_json/enum.Value.html\" title=\"enum serde_json::Value\">Value</a>","synthetic":false,"types":["serde_json::value::Value"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_json/value/struct.Number.html\" title=\"struct serde_json::value::Number\">Number</a>","synthetic":false,"types":["serde_json::number::Number"]}];
implementors["serde_regex"] = [{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_regex/struct.Serde.html\" title=\"struct serde_regex::Serde\">Serde</a>&lt;&amp;'a <a class=\"struct\" href=\"regex/re_unicode/struct.Regex.html\" title=\"struct regex::re_unicode::Regex\">Regex</a>&gt;","synthetic":false,"types":["serde_regex::Serde"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_regex/struct.Serde.html\" title=\"struct serde_regex::Serde\">Serde</a>&lt;<a class=\"struct\" href=\"regex/re_unicode/struct.Regex.html\" title=\"struct regex::re_unicode::Regex\">Regex</a>&gt;","synthetic":false,"types":["serde_regex::Serde"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_regex/struct.Serde.html\" title=\"struct serde_regex::Serde\">Serde</a>&lt;<a class=\"struct\" href=\"regex/re_set/unicode/struct.RegexSet.html\" title=\"struct regex::re_set::unicode::RegexSet\">RegexSet</a>&gt;","synthetic":false,"types":["serde_regex::Serde"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_regex/struct.Serde.html\" title=\"struct serde_regex::Serde\">Serde</a>&lt;&amp;'a <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"regex/re_unicode/struct.Regex.html\" title=\"struct regex::re_unicode::Regex\">Regex</a>&gt;&gt;","synthetic":false,"types":["serde_regex::Serde"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_regex/struct.Serde.html\" title=\"struct serde_regex::Serde\">Serde</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"regex/re_unicode/struct.Regex.html\" title=\"struct regex::re_unicode::Regex\">Regex</a>&gt;&gt;","synthetic":false,"types":["serde_regex::Serde"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_regex/struct.Serde.html\" title=\"struct serde_regex::Serde\">Serde</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"regex/re_unicode/struct.Regex.html\" title=\"struct regex::re_unicode::Regex\">Regex</a>&gt;&gt;","synthetic":false,"types":["serde_regex::Serde"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_regex/struct.Serde.html\" title=\"struct serde_regex::Serde\">Serde</a>&lt;&amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"regex/re_unicode/struct.Regex.html\" title=\"struct regex::re_unicode::Regex\">Regex</a>&gt;&gt;","synthetic":false,"types":["serde_regex::Serde"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_regex/struct.Serde.html\" title=\"struct serde_regex::Serde\">Serde</a>&lt;&amp;'a <a class=\"struct\" href=\"regex/re_bytes/struct.Regex.html\" title=\"struct regex::re_bytes::Regex\">Regex</a>&gt;","synthetic":false,"types":["serde_regex::Serde"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_regex/struct.Serde.html\" title=\"struct serde_regex::Serde\">Serde</a>&lt;<a class=\"struct\" href=\"regex/re_bytes/struct.Regex.html\" title=\"struct regex::re_bytes::Regex\">Regex</a>&gt;","synthetic":false,"types":["serde_regex::Serde"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_regex/struct.Serde.html\" title=\"struct serde_regex::Serde\">Serde</a>&lt;&amp;'a <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"regex/re_bytes/struct.Regex.html\" title=\"struct regex::re_bytes::Regex\">Regex</a>&gt;&gt;","synthetic":false,"types":["serde_regex::Serde"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_regex/struct.Serde.html\" title=\"struct serde_regex::Serde\">Serde</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"regex/re_bytes/struct.Regex.html\" title=\"struct regex::re_bytes::Regex\">Regex</a>&gt;&gt;","synthetic":false,"types":["serde_regex::Serde"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_regex/struct.Serde.html\" title=\"struct serde_regex::Serde\">Serde</a>&lt;<a class=\"struct\" href=\"regex/re_set/bytes/struct.RegexSet.html\" title=\"struct regex::re_set::bytes::RegexSet\">RegexSet</a>&gt;","synthetic":false,"types":["serde_regex::Serde"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_regex/struct.Serde.html\" title=\"struct serde_regex::Serde\">Serde</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"regex/re_bytes/struct.Regex.html\" title=\"struct regex::re_bytes::Regex\">Regex</a>&gt;&gt;","synthetic":false,"types":["serde_regex::Serde"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_regex/struct.Serde.html\" title=\"struct serde_regex::Serde\">Serde</a>&lt;&amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"regex/re_bytes/struct.Regex.html\" title=\"struct regex::re_bytes::Regex\">Regex</a>&gt;&gt;","synthetic":false,"types":["serde_regex::Serde"]}];
implementors["toml"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"toml/map/struct.Map.html\" title=\"struct toml::map::Map\">Map</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"enum\" href=\"toml/value/enum.Value.html\" title=\"enum toml::value::Value\">Value</a>&gt;","synthetic":false,"types":["toml::map::Map"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"toml/value/enum.Value.html\" title=\"enum toml::value::Value\">Value</a>","synthetic":false,"types":["toml::value::Value"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"toml/value/struct.Datetime.html\" title=\"struct toml::value::Datetime\">Datetime</a>","synthetic":false,"types":["toml::datetime::Datetime"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"toml/struct.Spanned.html\" title=\"struct toml::Spanned\">Spanned</a>&lt;T&gt;","synthetic":false,"types":["toml::spanned::Spanned"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()